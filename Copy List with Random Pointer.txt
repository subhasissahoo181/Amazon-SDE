/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        Node temp = head;

        //Step-1
        while(temp != null){
            Node newNode = new Node(temp.val);
            newNode.next = temp.next;
            temp.next = newNode;
            temp = temp.next.next;
        }
        // step-2
        Node iter = head;
        while(iter != null){
            if(iter.random != null){
                iter.next.random = iter.random.next;
            }
            iter = iter.next.next;
        }
        // step-3
        Node dummy = new Node(0);
        iter = head;
        temp = dummy;
        Node fast;
        while(iter != null){
            fast = iter.next.next;
            temp.next = iter.next;
            iter.next = fast;
            temp = temp.next;
            iter = iter.next;
        }
        return dummy.next;
    }
}
